# NOTE: This file is auto generated by OpenAPI Generator 6.2.1 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule VRChat.Model.World do
  @moduledoc """

  """

  @derive [Poison.Encoder]
  defstruct [
    :authorId,
    :authorName,
    :capacity,
    :created_at,
    :description,
    :favorites,
    :featured,
    :heat,
    :id,
    :imageUrl,
    :instances,
    :labsPublicationDate,
    :name,
    :namespace,
    :occupants,
    :organization,
    :popularity,
    :previewYoutubeId,
    :privateOccupants,
    :publicOccupants,
    :publicationDate,
    :releaseStatus,
    :tags,
    :thumbnailImageUrl,
    :unityPackages,
    :updated_at,
    :version,
    :visits
  ]

  @type t :: %__MODULE__{
          :authorId => String.t(),
          :authorName => String.t(),
          :capacity => integer(),
          :created_at => DateTime.t(),
          :description => String.t(),
          :favorites => integer() | nil,
          :featured => boolean(),
          :heat => integer(),
          :id => String.t(),
          :imageUrl => String.t(),
          :instances => [[AnyType]] | nil,
          :labsPublicationDate => String.t(),
          :name => String.t(),
          :namespace => String.t(),
          :occupants => integer() | nil,
          :organization => String.t(),
          :popularity => integer(),
          :previewYoutubeId => String.t() | nil,
          :privateOccupants => integer() | nil,
          :publicOccupants => integer() | nil,
          :publicationDate => String.t(),
          :releaseStatus => VRChat.Model.ReleaseStatus.t(),
          :tags => [VRChat.Model.String.t()],
          :thumbnailImageUrl => String.t(),
          :unityPackages => [VRChat.Model.UnityPackage.t()],
          :updated_at => DateTime.t(),
          :version => integer(),
          :visits => integer()
        }
end

defimpl Poison.Decoder, for: VRChat.Model.World do
  import VRChat.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:releaseStatus, :struct, VRChat.Model.ReleaseStatus, options)
    |> deserialize(:unityPackages, :list, VRChat.Model.UnityPackage, options)
  end
end
