diff --git a/lib/vrchat/api/authentication.ex b/lib/vrchat/api/authentication.ex
index e6835a0..f9dfdf2 100644
--- a/lib/vrchat/api/authentication.ex
+++ b/lib/vrchat/api/authentication.ex
@@ -96,10 +96,27 @@ defmodule VRChat.Api.Authentication do
     |> url("/auth/user")
     |> Enum.into([])
     |> (&Connection.request(connection, &1)).()
-    |> evaluate_response([
-      { 200, %VRChat.Model.CurrentUser{}},
-      { 401, %VRChat.Model.Error{}}
-    ])
+    |> attach_current_user_auth()
+  end
+
+  def attach_current_user_auth({:error, response}) do
+    {401, %VRChat.Model.Error{}, response}
+  end
+
+  def attach_current_user_auth({:ok, %Tesla.Env{headers: headers}} = response) do
+    cookies =
+      headers
+      |> Enum.filter(fn {x, _} -> x == "set-cookie" end)
+      |> Enum.map(fn {"set-cookie", data} -> {"cookie", data} end)
+
+    {code, user} =
+      response
+      |> evaluate_response([
+        {200, %VRChat.Model.CurrentUser{}},
+        {401, %VRChat.Model.Error{}}
+      ])
+
+    {code, user, Connection.new(cookies)}
   end

   @doc """
diff --git a/lib/vrchat/connection.ex b/lib/vrchat/connection.ex
index 3b5d82a..eb4008a 100644
--- a/lib/vrchat/connection.ex
+++ b/lib/vrchat/connection.ex
@@ -14,5 +14,24 @@ defmodule VRChat.Connection do
   plug Tesla.Middleware.Headers, [{"user-agent", "vrchat-elixir"}]
   plug Tesla.Middleware.EncodeJson, engine: Poison

+  @doc """
+  Configure a client connection using cookie authentication
+
+  ## Parameters
+
+  - cookies (tuple list): list of cookies to include  for the connection
+
+  # Returns
+
+  Tesla.Env.client
+
+  """
+  @spec new([{String.t(), String.t()}]) :: Tesla.Env.Client
+  def new(cookies) do
+    Tesla.client([
+      {Tesla.Middleware.Headers, cookies}
+    ])
+  end
+
   @doc """
   Configure a client connection using Basic authentication.
